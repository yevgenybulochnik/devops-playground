# vi: set ft=ruby:

require('etc')

username  = Etc.getlogin
ssh_key = File.read("/home/#{username}/.ssh/id_rsa.pub")

class VM
  attr_accessor :hostname, :box, :cpus, :memory, :provisioner, :aliases
  def initialize(options ={})
    self.hostname = options[:hostname]
    self.box = options[:box] || 'ubuntu/xenial64'
    self.cpus = options[:cpus] || '1'
    self.memory = options[:memory] || '512'
    self.provisioner = options[:provisioner] || "./#{options[:hostname]}/#{options[:hostname]}_config.sh"
    self.aliases = options[:aliases] || %w()
  end
end

# VM class is used to define vagrant vms, but specific defaults are set. Most defaults can be overwritten.
# @Params
#   hostname: hostname of machine, required param
#   box: vagrant image/box to use to provision the machine. Default is ubuntu/xenial64
#   cpus: number of cpus for the machine, default 1
#   memory: memory for the machine, default 512
#   provisioner: specific shell script used to provision vm, default is ./hostname/hostanme_config.sh
#   aliases: aliases for vagrant-hostmanager, default is empty list
# @Example
#   VM.new(
#     hostname: 'machine',
#     box: 'ubuntu/xenial64',
#     cpus: '2',
#     memory: '1024',
#     provisioner: '/path/to/provisioning/script',
#     aliases: %w(example.local, shop.example.local)
#   )

nodes  = [
  VM.new(hostname: 'lb1'),
  VM.new(hostname: 'data'),
  VM.new(hostname: 'web1', aliases: %w(blog.dreadnaught.com)),
  VM.new(hostname: 'web2'),
]

Vagrant.configure("2") do |config|
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
  end
  nodes.each_with_index do |node, i|
    config.vm.define node.hostname do |node_config|
      node_config.vm.box = node.box
      node_config.vm.hostname = node.hostname
      node_config.vm.network :private_network, ip: "172.17.64.#{i + 100}"
      node_config.hostmanager.aliases = node.aliases
      node_config.vm.synced_folder ".", "/vagrant", owner: "root", group: "root"
      node_config.vm.provider :virtualbox do |vbox|
        vbox.name = node.hostname
        vbox.memory = node.memory
        vbox.cpus = node.cpus
      end
      node_config.vm.provision "shell", inline: <<-SHELL
        apt update -y
        useradd -m -s /bin/bash -G sudo #{username}
        echo "#{username} ALL=(ALL) NOPASSWD:ALL" >  /etc/sudoers.d/#{username}
        mkdir -p /home/#{username}/.ssh/
        echo "#{ssh_key}" > /home/#{username}/.ssh/authorized_keys
        chown -R #{username}:#{username} /home/#{username}/.ssh
      SHELL
      node_config.vm.provision "shell", path: node.provisioner, args: "#{username}"
    end
  end
end
